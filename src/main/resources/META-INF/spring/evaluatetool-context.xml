<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
						http://www.springframework.org/schema/tx
        				http://www.springframework.org/schema/tx/spring-tx.xsd
						http://www.springframework.org/schema/aop 
                        http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
                        http://www.springframework.org/schema/jdbc
			 			http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
						http://www.springframework.org/schema/context 
						http://www.springframework.org/schema/context/spring-context-3.2.xsd">
	<bean id="propertyPlaceholderConfigurer"
		  class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:/META-INF/database.properties</value>
				<value>classpath:/META-INF/hibernate.properties</value>
			</list>
		</property>
	</bean>
	<aop:aspectj-autoproxy />
	<context:component-scan base-package="com.spt.evt" />
	<!--context:load-time-weaver / -->
	<tx:annotation-driven />
	<!-- Drives transactions using local JPA APIs -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<!-- Creates a EntityManagerFactory for use with the Hibernate JPA provider 
		and a simple in-memory data source populated with test data -->
	<bean id="entityManagerFactory"
		  class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
		</property>
	</bean>

	<aop:config>
		<aop:pointcut id="serviceOperation" expression="execution(* *..service.*.*(..))" />
		<aop:advisor pointcut-ref="serviceOperation" advice-ref="txAdvice" />
	</aop:config>

	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="get*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="find*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="check*" propagation="REQUIRED" />
			<tx:method name="edit*" propagation="REQUIRED" />
			<tx:method name="remove*" propagation="REQUIRED" />
			<tx:method name="insert*" propagation="REQUIRED" />
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="create*" propagation="REQUIRED" />
			<tx:method name="save*" propagation="REQUIRED"
					   rollback-for="Throwable" no-rollback-for="InstrumentNotFoundException" />
			<tx:method name="update*" propagation="REQUIRED"
					   rollback-for="Throwable" no-rollback-for="InstrumentNotFoundException" />
			<tx:method name="delete*" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>


	<!--<bean id="sessionFactory"	class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">-->
		<!--<property name="dataSource" ref="dataSource" />-->
		<!--<property name="packagesToScan" value="com.spt.evt.entity" />-->
		<!--<property name="hibernateProperties">-->
			<!--<props>-->
				<!--<prop key="hibernate.dialect">${hibernate.dialect}</prop>-->
				<!--<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>-->
				<!--<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>-->
				<!--<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>-->
			<!--</props>-->
		<!--</property>-->
	<!--</bean>-->

	<beans profile="evaluateTool">
		<!-- Creates an in-memory HSQLDB Database -->
		<!--jdbc:embedded-database id="dataSource" /-->
        <!--<jdbc:embedded-database id="dataSource"/> -->
        <bean class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close" id="dataSource">
            <property name="driverClassName" value="${database.driverClassName}"/>
            <property name="url" value="${database.url}"/>
            <property name="username" value="${database.username}"/>
            <property name="password" value="${database.password}"/>
            <property name="testOnBorrow" value="true"/>
            <property name="testOnReturn" value="true"/>
            <property name="testWhileIdle" value="true"/>
            <property name="timeBetweenEvictionRunsMillis" value="1800000"/>
            <property name="numTestsPerEvictionRun" value="3"/>
            <property name="minEvictableIdleTimeMillis" value="1800000"/>
            <property name="removeAbandoned" value="true"/>
            <property name="initialSize" value="100" />
            <property name="maxActive" value="100" />
       </bean>

        <!--<bean id="dataSourceInitializer"-->
              <!--class="org.springframework.jdbc.datasource.init.DataSourceInitializer">-->
            <!--<property name="dataSource" ref="dataSource" />-->
            <!--<property name="databasePopulator">-->
                <!--<bean class="org.springframework.jdbc.datasource.init.ResourceDatabasePopulator">-->
                    <!--<property name="ignoreFailedDrops" value="true" />-->
                    <!--<property name="sqlScriptEncoding" value="UTF-8" />-->
                    <!--<property name="scripts">-->
                        <!--<list>-->
                            <!--<value>classpath*:META-INF/database-script/import.sql</value>-->
                        <!--</list>-->
                    <!--</property>-->
                <!--</bean>-->
            <!--</property>-->
        <!--</bean>-->
    </beans>

    <beans profile="test">
        <!-- Creates an in-memory HSQLDB Database -->
		<!--<jdbc:embedded-database id="dataSource" />-->
        <bean class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close" id="dataSource">
            <property name="driverClassName" value="${database.driverClassName}"/>
            <property name="url" value="${database.url}"/>
            <property name="username" value="${database.username}"/>
            <property name="password" value="${database.password}"/>
            <property name="testOnBorrow" value="true"/>
            <property name="testOnReturn" value="true"/>
            <property name="testWhileIdle" value="true"/>
            <property name="timeBetweenEvictionRunsMillis" value="1800000"/>
            <property name="numTestsPerEvictionRun" value="3"/>
            <property name="minEvictableIdleTimeMillis" value="1800000"/>
            <property name="removeAbandoned" value="true"/>
            <property name="initialSize" value="100" />
            <property name="maxActive" value="100" />
        </bean>

		<bean id="dataSourceInitializer"
			  class="org.springframework.jdbc.datasource.init.DataSourceInitializer">
			<property name="dataSource" ref="dataSource" />
			<property name="databasePopulator">
				<bean class="org.springframework.jdbc.datasource.init.ResourceDatabasePopulator">
					<property name="ignoreFailedDrops" value="true" />
					<property name="sqlScriptEncoding" value="UTF-8" />
					<property name="scripts">
						<list>
							<value>classpath*:META-INF/database-script/prepare_test.sql
							</value>
						</list>
					</property>
				</bean>
			</property>
		</bean>
	</beans>

</beans>
